<?php
//**************************************************************************************
//**************************************************************************************
/**
 * SQL Where Trait
 *
 * @package         phpopenfw/phpopenfw2
 * @author          Christian J. Clark
 * @copyright       Copyright (c) Christian J. Clark
 * @license         https://mit-license.org
 **/
//**************************************************************************************
//**************************************************************************************

namespace phpOpenFW\Builders\SQL\Traits;

//**************************************************************************************
/**
 * SQL Where Trait
 */
//**************************************************************************************
trait Where
{
    //=========================================================================
    // Traits
    //=========================================================================

    //=========================================================================
    // Trait Memebers
    //=========================================================================
    protected $wheres = [];

    //=========================================================================
    //=========================================================================
    // Where Method
    //=========================================================================
    //=========================================================================
    public function Where($field, $op=null, $val=false, $type='s', $andor='and')
    {
        if (!self::IsValidOperator($op)) {
            if (self::IsValidAndOr($type)) {
                $andor = $type;
            }
            if (self::IsValidParamType($val)) {
                $type = $val;
            }
            $val = $op;
            $op = '=';
        }
        $this->AddCondition($this->wheres, $field, $op, $val, $type, $andor);
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where Method
    //=========================================================================
    //=========================================================================
    public function OrWhere($field, $op=null, $val=false, $type='s')
    {
        $this->Where($field, $op, $val, $type, 'or');        
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Where Between Method
    //=========================================================================
    //=========================================================================
    public function WhereBetween(String $field, Array $val, $type='s')
    {
        $this->AddCondition($this->wheres, $field, 'BETWEEN', $val, $type, 'and');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where Between Method
    //=========================================================================
    //=========================================================================
    public function OrWhereBetween(String $field, Array $val, $type='s')
    {
        $this->AddCondition($this->wheres, $field, 'BETWEEN', $val, $type, 'or');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Where Not Between Method
    //=========================================================================
    //=========================================================================
    public function WhereNotBetween(String $field, Array $val, $type='s')
    {
        $this->AddCondition($this->wheres, $field, 'NOT BETWEEN', $val, $type, 'and');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where Not Between Method
    //=========================================================================
    //=========================================================================
    public function OrWhereNotBetween(String $field, Array $val, $type='s')
    {
        $this->AddCondition($this->wheres, $field, 'NOT BETWEEN', $val, $type, 'or');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Where In Method
    //=========================================================================
    //=========================================================================
    public function WhereIn(String $field, $val, $type='s')
    {
        $this->AddCondition($this->wheres, $field, 'IN', $val, $type, 'and');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where In Method
    //=========================================================================
    //=========================================================================
    public function OrWhereIn(String $field, $val, $type='s')
    {
        $this->AddCondition($this->wheres, $field, 'IN', $val, $type, 'or');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Where Not In Method
    //=========================================================================
    //=========================================================================
    public function WhereNotIn(String $field, Array $val, $type='s')
    {
        $this->AddCondition($this->wheres, $field, 'NOT IN', $val, $type, 'and');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where Not In Method
    //=========================================================================
    //=========================================================================
    public function OrWhereNotIn(String $field, Array $val, $type='s')
    {
        $this->AddCondition($this->wheres, $field, 'NOT IN', $val, $type, 'or');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Where Like Method
    //=========================================================================
    //=========================================================================
    public function WhereLike(String $field, $val, $type='s')
    {
        $this->AddCondition($this->wheres, $field, 'LIKE', $val, $type, 'and');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where Like Method
    //=========================================================================
    //=========================================================================
    public function OrWhereLike(String $field, $val, $type='s')
    {
        $this->AddCondition($this->wheres, $field, 'LIKE', $val, $type, 'or');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Where Not Like Method
    //=========================================================================
    //=========================================================================
    public function WhereNotLike(String $field, $val, $type='s')
    {
        $this->AddCondition($this->wheres, $field, 'NOT LIKE', $val, $type, 'and');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where Not Like Method
    //=========================================================================
    //=========================================================================
    public function OrWhereNotLike(String $field, $val, $type='s')
    {
        $this->AddCondition($this->wheres, $field, 'NOT LIKE', $val, $type, 'or');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Where Is Null Method
    //=========================================================================
    //=========================================================================
    public function WhereNull(String $field)
    {
        $this->AddCondition($this->wheres, $field, 'IS NULL', null, '', 'and');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where Is Null Method
    //=========================================================================
    //=========================================================================
    public function OrWhereNull(String $field)
    {
        $this->AddCondition($this->wheres, $field, 'IS NULL', null, '', 'or');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Where Is Not Null Method
    //=========================================================================
    //=========================================================================
    public function WhereNotNull(String $field)
    {
        $this->AddCondition($this->wheres, $field, 'IS NOT NULL', null, '', 'and');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where Is Null Method
    //=========================================================================
    //=========================================================================
    public function OrWhereNotNull(String $field)
    {
        $this->AddCondition($this->wheres, $field, 'IS NOT NULL', null, '', 'or');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Where Column Method
    //=========================================================================
    //=========================================================================
    public function WhereColumn(String $field1, String $op, String $field2='', $andor='and')
    {
        //-----------------------------------------------------------------
        // Validate Parameters
        //-----------------------------------------------------------------
        if (!$field1) {
            throw new \Exception('Invalid field name given.');
        }

        //-----------------------------------------------------------------
        // No Operator
        //-----------------------------------------------------------------
        if ($field2 == '' && !self::IsValidOperator($op)) {
            $field2 = $op;
            $op = '=';
        }

        $this->wheres[] = [$andor, "{$field1} {$op} {$field2}"];
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where Column Method
    //=========================================================================
    //=========================================================================
    public function OrWhereColumn(String $field1, String $op, String $field2='')
    {
        $this->WhereColumn($field1, $op, $field2, 'or');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // On Method (Alias of WhereColumn)
    //=========================================================================
    //=========================================================================
    public function On(String $field1, String $op, String $field2='')
    {
        $this->WhereColumn($field1, $op, $field2);
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or On Method (Alias of WhereColumn w/ Or)
    //=========================================================================
    //=========================================================================
    public function OrOn(String $field1, String $op, String $field2='')
    {
        $this->WhereColumn($field1, $op, $field2, 'or');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Where Raw Method
    //=========================================================================
    //=========================================================================
    public function WhereRaw(String $where_raw)
    {
        if ($where_raw) {
            $this->wheres[] = ['and', $where_raw];
        }
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where Raw Method
    //=========================================================================
    //=========================================================================
    public function OrWhereRaw(String $where_raw)
    {
        if ($where_raw) {
            $this->wheres[] = ['or', $where_raw];
        }
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Where Exists Method
    //=========================================================================
    //=========================================================================
    public function WhereExists($query)
    {
        $this->AddCondition($this->wheres, '', 'EXISTS', $query, '', 'and');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where Exists Method
    //=========================================================================
    //=========================================================================
    public function OrWhereExists($query)
    {
        $this->AddCondition($this->wheres, '', 'EXISTS', $query, '', 'or');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Where Exists Method
    //=========================================================================
    //=========================================================================
    public function WhereNotExists($query)
    {
        $this->AddCondition($this->wheres, '', 'NOT EXISTS', $query, 'and');
        return $this;
    }

    //=========================================================================
    //=========================================================================
    // Or Where Exists Method
    //=========================================================================
    //=========================================================================
    public function OrWhereNotExists($query)
    {
        $this->AddCondition($this->wheres, '', 'NOT EXISTS', $query, 'or');
        return $this;
    }

    //##################################################################################
    //##################################################################################
    //##################################################################################
    // Protected / Internal Methods
    //##################################################################################
    //##################################################################################
    //##################################################################################

    //=========================================================================
    //=========================================================================
    // Format Where Clause Method
    //=========================================================================
    //=========================================================================
    protected function FormatWhere()
    {
        $clause = $this->FormatConditions($this->wheres);
        if ($clause) {
            $clause = "WHERE " . $clause;
        }
        return $clause;
    }

}
