<?php
//*****************************************************************************
//*****************************************************************************
/**
 * JSON Builder Class
 *
 * @package        phpOpenFW
 * @author         Christian J. Clark
 * @copyright    Copyright (c) Christian J. Clark
 * @license        https://mit-license.org
 **/
//*****************************************************************************
//*****************************************************************************

namespace phpOpenFW\Builders;

//*****************************************************************************
/**
 * JSON Class
 */
//*****************************************************************************
class JSON
{
    //=========================================================================
    // Class Members
    //=========================================================================
    protected $arr = [];
    protected $en_arr;

    //=========================================================================
    //=========================================================================
    // Constructor Method
    //=========================================================================
    //=========================================================================
    public function __construct($in_val=false)
    {
        if (is_array($in_val)) {
            $this->arr = $in_val;
        }
        else if (is_string($in_val)) {
            $in_arr = json_decode($in_val, true);
            if ($in_arr) {
                $this->arr = $in_arr;
            }
        }
        $this->en_arr = new EnArray($this->arr);
    }

    //=========================================================================
    //=========================================================================
    // To String Method
    //=========================================================================
    //=========================================================================
    public function __toString()
    {
        return $this->Encode();
    }

    //=========================================================================
    //=========================================================================
    // Encode
    //=========================================================================
    //=========================================================================
    public function Encode()
    {
        return (string)$this->en_arr;
    }

    //=========================================================================
    //=========================================================================
    // Decode
    //=========================================================================
    //=========================================================================
    public function Decode()
    {
        return $this->arr;
    }

    //=========================================================================
    //=========================================================================
    // Get Method
    //=========================================================================
    //=========================================================================
    public function Get($path)
    {
        return $this->en_arr->Get($path);
    }

    //=========================================================================
    //=========================================================================
    // Set Method
    //=========================================================================
    //=========================================================================
    public function Set($path, $value, $set_root=false)
    {
        return $this->en_arr->Set($path, $value, $this->arr, $set_root);
    }

}
